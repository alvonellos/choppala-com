pipeline {
    agent {
        docker {
            dockerfile true
        }
    }

    environment {
        dockerImageName = 'alvonellos/choppala-www'
        // Define your Docker image name
    }

    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean install -U'
            }
        }

        stage('Test') {
            steps {
                sh 'mvn test'
            }

            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }

        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }

        stage('Build image') {
            steps {
                script {
                    def dockerImage = docker.build("${dockerImageName}:${env.BUILD_NUMBER}")
                }
            }
        }

        stage('Push image to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', '65fbcb2c-d252-4e31-bacc-8e63f06f3d87') {
                        // Use the ID of the Jenkins credentials that store Docker Hub username and password
                        def dockerImage = docker.image("${dockerImageName}:${env.BUILD_NUMBER}")
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Deploying container to Kubernetes') {
            steps {
                script {
                    echo "Starting deployment..."
                    kubernetesDeploy(configs: "kubernetes/deployment.yaml", "kubernetes/service.yaml")
                    echo "Deployment completed."
                }
            }
        }
        post {
            // Clean after build
            always {
                cleanWs(cleanWhenNotBuilt: false,
                        deleteDirs: true,
                        disableDeferredWipeout: true,
                        notFailBuild: true,
                        patterns: [[pattern: '.gitignore', type: 'INCLUDE'],
                                   [pattern: '.propsfile', type: 'EXCLUDE']])
            }
        }
    }
}
