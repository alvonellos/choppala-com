pipeline {
    agent {
        docker {
            dockerfile true
        }
    }

    environment {
        dockerImageName = 'alvonellos/choppala-www'
        // Define your Docker image name
        kubernetesNamespace = 'choppala-www' // Update with your Kubernetes namespace
    }

    stages {
        stage('Build') {
            steps {
                sh 'mvn -B -DskipTests clean install -U'
            }
        }

        stage('Test') {
            steps {
                sh 'mvn test'
            }

            post {
                always {
                    junit 'target/surefire-reports/*.xml'
                }
            }
        }

        stage('Deliver') {
            steps {
                sh './jenkins/scripts/deliver.sh'
            }
        }

        stage('Build image') {
            steps {
                script {
                    def dockerImage = docker.build("${dockerImageName}:${env.BUILD_NUMBER}", "--build-arg JAR_FILE=target/*.jar")
                }
            }
        }

        stage('Push image to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://registry.docker.io', '65fbcb2c-d252-4e31-bacc-8e63f06f3d87') {
                        // Use the ID of the Jenkins credentials that store Docker Hub username and password
                        def dockerImage = docker.image("${dockerImageName}:${env.BUILD_NUMBER}")
                        dockerImage.push()
                    }
                }
            }
        }


        stage('Deploy to Kubernetes') {
            steps {
                script {
                    // Use the Kubernetes plugin to deploy to the cluster
                    def kubeconfig = credentials('kubernetes cluster local') // Use the ID of the Kubernetes credential
                    kubernetesDeploy(configs: "kubernetes/deployment.yaml", "kubernetes/service.yaml")
                }
            }
        }
    }
}
